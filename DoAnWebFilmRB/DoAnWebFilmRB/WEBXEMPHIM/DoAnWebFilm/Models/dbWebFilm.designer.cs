#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAnWebFilm.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WEBFILM")]
	public partial class dbWebFilmDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMINFILM(ADMINFILM instance);
    partial void UpdateADMINFILM(ADMINFILM instance);
    partial void DeleteADMINFILM(ADMINFILM instance);
    partial void InsertBINHLUAN(BINHLUAN instance);
    partial void UpdateBINHLUAN(BINHLUAN instance);
    partial void DeleteBINHLUAN(BINHLUAN instance);
    partial void InsertCHITIETLOAI(CHITIETLOAI instance);
    partial void UpdateCHITIETLOAI(CHITIETLOAI instance);
    partial void DeleteCHITIETLOAI(CHITIETLOAI instance);
    partial void InsertDANHGIA(DANHGIA instance);
    partial void UpdateDANHGIA(DANHGIA instance);
    partial void DeleteDANHGIA(DANHGIA instance);
    partial void InsertDIENVIEN(DIENVIEN instance);
    partial void UpdateDIENVIEN(DIENVIEN instance);
    partial void DeleteDIENVIEN(DIENVIEN instance);
    partial void InsertLOAI(LOAI instance);
    partial void UpdateLOAI(LOAI instance);
    partial void DeleteLOAI(LOAI instance);
    partial void InsertNAMPHATHANH(NAMPHATHANH instance);
    partial void UpdateNAMPHATHANH(NAMPHATHANH instance);
    partial void DeleteNAMPHATHANH(NAMPHATHANH instance);
    partial void InsertPHIM(PHIM instance);
    partial void UpdatePHIM(PHIM instance);
    partial void DeletePHIM(PHIM instance);
    partial void InsertPHIMSAPCHIEU(PHIMSAPCHIEU instance);
    partial void UpdatePHIMSAPCHIEU(PHIMSAPCHIEU instance);
    partial void DeletePHIMSAPCHIEU(PHIMSAPCHIEU instance);
    partial void InsertPHIM_DV(PHIM_DV instance);
    partial void UpdatePHIM_DV(PHIM_DV instance);
    partial void DeletePHIM_DV(PHIM_DV instance);
    partial void InsertQUOCGIA(QUOCGIA instance);
    partial void UpdateQUOCGIA(QUOCGIA instance);
    partial void DeleteQUOCGIA(QUOCGIA instance);
    partial void InsertTHANHVIEN(THANHVIEN instance);
    partial void UpdateTHANHVIEN(THANHVIEN instance);
    partial void DeleteTHANHVIEN(THANHVIEN instance);
    partial void InsertTRANGTHAI(TRANGTHAI instance);
    partial void UpdateTRANGTHAI(TRANGTHAI instance);
    partial void DeleteTRANGTHAI(TRANGTHAI instance);
    #endregion
		
		public dbWebFilmDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WEBFILMConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbWebFilmDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbWebFilmDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbWebFilmDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbWebFilmDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMINFILM> ADMINFILMs
		{
			get
			{
				return this.GetTable<ADMINFILM>();
			}
		}
		
		public System.Data.Linq.Table<BINHLUAN> BINHLUANs
		{
			get
			{
				return this.GetTable<BINHLUAN>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETLOAI> CHITIETLOAIs
		{
			get
			{
				return this.GetTable<CHITIETLOAI>();
			}
		}
		
		public System.Data.Linq.Table<DANHGIA> DANHGIAs
		{
			get
			{
				return this.GetTable<DANHGIA>();
			}
		}
		
		public System.Data.Linq.Table<DIENVIEN> DIENVIENs
		{
			get
			{
				return this.GetTable<DIENVIEN>();
			}
		}
		
		public System.Data.Linq.Table<LOAI> LOAIs
		{
			get
			{
				return this.GetTable<LOAI>();
			}
		}
		
		public System.Data.Linq.Table<NAMPHATHANH> NAMPHATHANHs
		{
			get
			{
				return this.GetTable<NAMPHATHANH>();
			}
		}
		
		public System.Data.Linq.Table<PHIM> PHIMs
		{
			get
			{
				return this.GetTable<PHIM>();
			}
		}
		
		public System.Data.Linq.Table<PHIMSAPCHIEU> PHIMSAPCHIEUs
		{
			get
			{
				return this.GetTable<PHIMSAPCHIEU>();
			}
		}
		
		public System.Data.Linq.Table<PHIM_DV> PHIM_DVs
		{
			get
			{
				return this.GetTable<PHIM_DV>();
			}
		}
		
		public System.Data.Linq.Table<QUOCGIA> QUOCGIAs
		{
			get
			{
				return this.GetTable<QUOCGIA>();
			}
		}
		
		public System.Data.Linq.Table<THANHVIEN> THANHVIENs
		{
			get
			{
				return this.GetTable<THANHVIEN>();
			}
		}
		
		public System.Data.Linq.Table<TRANGTHAI> TRANGTHAIs
		{
			get
			{
				return this.GetTable<TRANGTHAI>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMINFILM")]
	public partial class ADMINFILM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ADMIN;
		
		private string _TEN_ADMIN;
		
		private string _MK_ADMIN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ADMINChanging(int value);
    partial void OnID_ADMINChanged();
    partial void OnTEN_ADMINChanging(string value);
    partial void OnTEN_ADMINChanged();
    partial void OnMK_ADMINChanging(string value);
    partial void OnMK_ADMINChanged();
    #endregion
		
		public ADMINFILM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ADMIN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ADMIN
		{
			get
			{
				return this._ID_ADMIN;
			}
			set
			{
				if ((this._ID_ADMIN != value))
				{
					this.OnID_ADMINChanging(value);
					this.SendPropertyChanging();
					this._ID_ADMIN = value;
					this.SendPropertyChanged("ID_ADMIN");
					this.OnID_ADMINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_ADMIN", DbType="NVarChar(50)")]
		public string TEN_ADMIN
		{
			get
			{
				return this._TEN_ADMIN;
			}
			set
			{
				if ((this._TEN_ADMIN != value))
				{
					this.OnTEN_ADMINChanging(value);
					this.SendPropertyChanging();
					this._TEN_ADMIN = value;
					this.SendPropertyChanged("TEN_ADMIN");
					this.OnTEN_ADMINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MK_ADMIN", DbType="NVarChar(50)")]
		public string MK_ADMIN
		{
			get
			{
				return this._MK_ADMIN;
			}
			set
			{
				if ((this._MK_ADMIN != value))
				{
					this.OnMK_ADMINChanging(value);
					this.SendPropertyChanging();
					this._MK_ADMIN = value;
					this.SendPropertyChanged("MK_ADMIN");
					this.OnMK_ADMINChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BINHLUAN")]
	public partial class BINHLUAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_BINHLUAN;
		
		private System.Nullable<int> _ID_TV;
		
		private System.Nullable<int> _ID_PHIM;
		
		private string _NOIDUNG;
		
		private System.Nullable<System.DateTime> _NGAY_BINHLUAN;
		
		private EntityRef<PHIM> _PHIM;
		
		private EntityRef<THANHVIEN> _THANHVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BINHLUANChanging(int value);
    partial void OnID_BINHLUANChanged();
    partial void OnID_TVChanging(System.Nullable<int> value);
    partial void OnID_TVChanged();
    partial void OnID_PHIMChanging(System.Nullable<int> value);
    partial void OnID_PHIMChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnNGAY_BINHLUANChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAY_BINHLUANChanged();
    #endregion
		
		public BINHLUAN()
		{
			this._PHIM = default(EntityRef<PHIM>);
			this._THANHVIEN = default(EntityRef<THANHVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BINHLUAN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_BINHLUAN
		{
			get
			{
				return this._ID_BINHLUAN;
			}
			set
			{
				if ((this._ID_BINHLUAN != value))
				{
					this.OnID_BINHLUANChanging(value);
					this.SendPropertyChanging();
					this._ID_BINHLUAN = value;
					this.SendPropertyChanged("ID_BINHLUAN");
					this.OnID_BINHLUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TV", DbType="Int")]
		public System.Nullable<int> ID_TV
		{
			get
			{
				return this._ID_TV;
			}
			set
			{
				if ((this._ID_TV != value))
				{
					if (this._THANHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TVChanging(value);
					this.SendPropertyChanging();
					this._ID_TV = value;
					this.SendPropertyChanged("ID_TV");
					this.OnID_TVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHIM", DbType="Int")]
		public System.Nullable<int> ID_PHIM
		{
			get
			{
				return this._ID_PHIM;
			}
			set
			{
				if ((this._ID_PHIM != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PHIMChanging(value);
					this.SendPropertyChanging();
					this._ID_PHIM = value;
					this.SendPropertyChanged("ID_PHIM");
					this.OnID_PHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(200)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_BINHLUAN", DbType="Date")]
		public System.Nullable<System.DateTime> NGAY_BINHLUAN
		{
			get
			{
				return this._NGAY_BINHLUAN;
			}
			set
			{
				if ((this._NGAY_BINHLUAN != value))
				{
					this.OnNGAY_BINHLUANChanging(value);
					this.SendPropertyChanging();
					this._NGAY_BINHLUAN = value;
					this.SendPropertyChanged("NGAY_BINHLUAN");
					this.OnNGAY_BINHLUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_BINHLUAN", Storage="_PHIM", ThisKey="ID_PHIM", OtherKey="ID_PHIM", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._ID_PHIM = value.ID_PHIM;
					}
					else
					{
						this._ID_PHIM = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THANHVIEN_BINHLUAN", Storage="_THANHVIEN", ThisKey="ID_TV", OtherKey="ID_TV", IsForeignKey=true)]
		public THANHVIEN THANHVIEN
		{
			get
			{
				return this._THANHVIEN.Entity;
			}
			set
			{
				THANHVIEN previousValue = this._THANHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._THANHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THANHVIEN.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._THANHVIEN.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._ID_TV = value.ID_TV;
					}
					else
					{
						this._ID_TV = default(Nullable<int>);
					}
					this.SendPropertyChanged("THANHVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETLOAI")]
	public partial class CHITIETLOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PHIM;
		
		private int _IDLOAI;
		
		private EntityRef<LOAI> _LOAI;
		
		private EntityRef<PHIM> _PHIM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PHIMChanging(int value);
    partial void OnID_PHIMChanged();
    partial void OnIDLOAIChanging(int value);
    partial void OnIDLOAIChanged();
    #endregion
		
		public CHITIETLOAI()
		{
			this._LOAI = default(EntityRef<LOAI>);
			this._PHIM = default(EntityRef<PHIM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHIM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PHIM
		{
			get
			{
				return this._ID_PHIM;
			}
			set
			{
				if ((this._ID_PHIM != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PHIMChanging(value);
					this.SendPropertyChanging();
					this._ID_PHIM = value;
					this.SendPropertyChanged("ID_PHIM");
					this.OnID_PHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLOAI", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLOAI
		{
			get
			{
				return this._IDLOAI;
			}
			set
			{
				if ((this._IDLOAI != value))
				{
					if (this._LOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLOAIChanging(value);
					this.SendPropertyChanging();
					this._IDLOAI = value;
					this.SendPropertyChanged("IDLOAI");
					this.OnIDLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_CHITIETLOAI", Storage="_LOAI", ThisKey="IDLOAI", OtherKey="IDLOAI", IsForeignKey=true)]
		public LOAI LOAI
		{
			get
			{
				return this._LOAI.Entity;
			}
			set
			{
				LOAI previousValue = this._LOAI.Entity;
				if (((previousValue != value) 
							|| (this._LOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI.Entity = null;
						previousValue.CHITIETLOAIs.Remove(this);
					}
					this._LOAI.Entity = value;
					if ((value != null))
					{
						value.CHITIETLOAIs.Add(this);
						this._IDLOAI = value.IDLOAI;
					}
					else
					{
						this._IDLOAI = default(int);
					}
					this.SendPropertyChanged("LOAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_CHITIETLOAI", Storage="_PHIM", ThisKey="ID_PHIM", OtherKey="ID_PHIM", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.CHITIETLOAIs.Remove(this);
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.CHITIETLOAIs.Add(this);
						this._ID_PHIM = value.ID_PHIM;
					}
					else
					{
						this._ID_PHIM = default(int);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHGIA")]
	public partial class DANHGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TV;
		
		private int _ID_PHIM;
		
		private System.Nullable<int> _DIEM;
		
		private System.Nullable<int> _TONGDIEM;
		
		private EntityRef<PHIM> _PHIM;
		
		private EntityRef<THANHVIEN> _THANHVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TVChanging(int value);
    partial void OnID_TVChanged();
    partial void OnID_PHIMChanging(int value);
    partial void OnID_PHIMChanged();
    partial void OnDIEMChanging(System.Nullable<int> value);
    partial void OnDIEMChanged();
    partial void OnTONGDIEMChanging(System.Nullable<int> value);
    partial void OnTONGDIEMChanged();
    #endregion
		
		public DANHGIA()
		{
			this._PHIM = default(EntityRef<PHIM>);
			this._THANHVIEN = default(EntityRef<THANHVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_TV
		{
			get
			{
				return this._ID_TV;
			}
			set
			{
				if ((this._ID_TV != value))
				{
					if (this._THANHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TVChanging(value);
					this.SendPropertyChanging();
					this._ID_TV = value;
					this.SendPropertyChanged("ID_TV");
					this.OnID_TVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHIM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PHIM
		{
			get
			{
				return this._ID_PHIM;
			}
			set
			{
				if ((this._ID_PHIM != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PHIMChanging(value);
					this.SendPropertyChanging();
					this._ID_PHIM = value;
					this.SendPropertyChanged("ID_PHIM");
					this.OnID_PHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEM", DbType="Int")]
		public System.Nullable<int> DIEM
		{
			get
			{
				return this._DIEM;
			}
			set
			{
				if ((this._DIEM != value))
				{
					this.OnDIEMChanging(value);
					this.SendPropertyChanging();
					this._DIEM = value;
					this.SendPropertyChanged("DIEM");
					this.OnDIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGDIEM", DbType="Int")]
		public System.Nullable<int> TONGDIEM
		{
			get
			{
				return this._TONGDIEM;
			}
			set
			{
				if ((this._TONGDIEM != value))
				{
					this.OnTONGDIEMChanging(value);
					this.SendPropertyChanging();
					this._TONGDIEM = value;
					this.SendPropertyChanged("TONGDIEM");
					this.OnTONGDIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_DANHGIA", Storage="_PHIM", ThisKey="ID_PHIM", OtherKey="ID_PHIM", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.DANHGIAs.Remove(this);
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.DANHGIAs.Add(this);
						this._ID_PHIM = value.ID_PHIM;
					}
					else
					{
						this._ID_PHIM = default(int);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THANHVIEN_DANHGIA", Storage="_THANHVIEN", ThisKey="ID_TV", OtherKey="ID_TV", IsForeignKey=true)]
		public THANHVIEN THANHVIEN
		{
			get
			{
				return this._THANHVIEN.Entity;
			}
			set
			{
				THANHVIEN previousValue = this._THANHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._THANHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THANHVIEN.Entity = null;
						previousValue.DANHGIAs.Remove(this);
					}
					this._THANHVIEN.Entity = value;
					if ((value != null))
					{
						value.DANHGIAs.Add(this);
						this._ID_TV = value.ID_TV;
					}
					else
					{
						this._ID_TV = default(int);
					}
					this.SendPropertyChanged("THANHVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIENVIEN")]
	public partial class DIENVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DV;
		
		private string _TEN_DV;
		
		private EntitySet<PHIM_DV> _PHIM_DVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DVChanging(int value);
    partial void OnID_DVChanged();
    partial void OnTEN_DVChanging(string value);
    partial void OnTEN_DVChanged();
    #endregion
		
		public DIENVIEN()
		{
			this._PHIM_DVs = new EntitySet<PHIM_DV>(new Action<PHIM_DV>(this.attach_PHIM_DVs), new Action<PHIM_DV>(this.detach_PHIM_DVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_DV
		{
			get
			{
				return this._ID_DV;
			}
			set
			{
				if ((this._ID_DV != value))
				{
					this.OnID_DVChanging(value);
					this.SendPropertyChanging();
					this._ID_DV = value;
					this.SendPropertyChanged("ID_DV");
					this.OnID_DVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_DV", DbType="NVarChar(50)")]
		public string TEN_DV
		{
			get
			{
				return this._TEN_DV;
			}
			set
			{
				if ((this._TEN_DV != value))
				{
					this.OnTEN_DVChanging(value);
					this.SendPropertyChanging();
					this._TEN_DV = value;
					this.SendPropertyChanged("TEN_DV");
					this.OnTEN_DVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIENVIEN_PHIM_DV", Storage="_PHIM_DVs", ThisKey="ID_DV", OtherKey="ID_DV")]
		public EntitySet<PHIM_DV> PHIM_DVs
		{
			get
			{
				return this._PHIM_DVs;
			}
			set
			{
				this._PHIM_DVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIM_DVs(PHIM_DV entity)
		{
			this.SendPropertyChanging();
			entity.DIENVIEN = this;
		}
		
		private void detach_PHIM_DVs(PHIM_DV entity)
		{
			this.SendPropertyChanging();
			entity.DIENVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI")]
	public partial class LOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLOAI;
		
		private string _TENLOAI;
		
		private EntitySet<CHITIETLOAI> _CHITIETLOAIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLOAIChanging(int value);
    partial void OnIDLOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAI()
		{
			this._CHITIETLOAIs = new EntitySet<CHITIETLOAI>(new Action<CHITIETLOAI>(this.attach_CHITIETLOAIs), new Action<CHITIETLOAI>(this.detach_CHITIETLOAIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLOAI", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDLOAI
		{
			get
			{
				return this._IDLOAI;
			}
			set
			{
				if ((this._IDLOAI != value))
				{
					this.OnIDLOAIChanging(value);
					this.SendPropertyChanging();
					this._IDLOAI = value;
					this.SendPropertyChanged("IDLOAI");
					this.OnIDLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(30)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_CHITIETLOAI", Storage="_CHITIETLOAIs", ThisKey="IDLOAI", OtherKey="IDLOAI")]
		public EntitySet<CHITIETLOAI> CHITIETLOAIs
		{
			get
			{
				return this._CHITIETLOAIs;
			}
			set
			{
				this._CHITIETLOAIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETLOAIs(CHITIETLOAI entity)
		{
			this.SendPropertyChanging();
			entity.LOAI = this;
		}
		
		private void detach_CHITIETLOAIs(CHITIETLOAI entity)
		{
			this.SendPropertyChanging();
			entity.LOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NAMPHATHANH")]
	public partial class NAMPHATHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NAM;
		
		private System.Nullable<int> _NAM_PHAT;
		
		private EntitySet<PHIM> _PHIMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NAMChanging(int value);
    partial void OnID_NAMChanged();
    partial void OnNAM_PHATChanging(System.Nullable<int> value);
    partial void OnNAM_PHATChanged();
    #endregion
		
		public NAMPHATHANH()
		{
			this._PHIMs = new EntitySet<PHIM>(new Action<PHIM>(this.attach_PHIMs), new Action<PHIM>(this.detach_PHIMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NAM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NAM
		{
			get
			{
				return this._ID_NAM;
			}
			set
			{
				if ((this._ID_NAM != value))
				{
					this.OnID_NAMChanging(value);
					this.SendPropertyChanging();
					this._ID_NAM = value;
					this.SendPropertyChanged("ID_NAM");
					this.OnID_NAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAM_PHAT", DbType="Int")]
		public System.Nullable<int> NAM_PHAT
		{
			get
			{
				return this._NAM_PHAT;
			}
			set
			{
				if ((this._NAM_PHAT != value))
				{
					this.OnNAM_PHATChanging(value);
					this.SendPropertyChanging();
					this._NAM_PHAT = value;
					this.SendPropertyChanged("NAM_PHAT");
					this.OnNAM_PHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMPHATHANH_PHIM", Storage="_PHIMs", ThisKey="ID_NAM", OtherKey="ID_NAM")]
		public EntitySet<PHIM> PHIMs
		{
			get
			{
				return this._PHIMs;
			}
			set
			{
				this._PHIMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.NAMPHATHANH = this;
		}
		
		private void detach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.NAMPHATHANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIM")]
	public partial class PHIM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PHIM;
		
		private string _TEN_PHIM;
		
		private string _IMAGE_PHIM;
		
		private string _LINK_PHIM;
		
		private string _MOTA;
		
		private System.Nullable<int> _ID_TRANGTHAI;
		
		private System.Nullable<int> _ID_QG;
		
		private System.Nullable<int> _ID_NAM;
		
		private System.Nullable<int> _LuotXem;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<CHITIETLOAI> _CHITIETLOAIs;
		
		private EntitySet<DANHGIA> _DANHGIAs;
		
		private EntitySet<PHIM_DV> _PHIM_DVs;
		
		private EntityRef<NAMPHATHANH> _NAMPHATHANH;
		
		private EntityRef<QUOCGIA> _QUOCGIA;
		
		private EntityRef<TRANGTHAI> _TRANGTHAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PHIMChanging(int value);
    partial void OnID_PHIMChanged();
    partial void OnTEN_PHIMChanging(string value);
    partial void OnTEN_PHIMChanged();
    partial void OnIMAGE_PHIMChanging(string value);
    partial void OnIMAGE_PHIMChanged();
    partial void OnLINK_PHIMChanging(string value);
    partial void OnLINK_PHIMChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnID_TRANGTHAIChanging(System.Nullable<int> value);
    partial void OnID_TRANGTHAIChanged();
    partial void OnID_QGChanging(System.Nullable<int> value);
    partial void OnID_QGChanged();
    partial void OnID_NAMChanging(System.Nullable<int> value);
    partial void OnID_NAMChanged();
    partial void OnLuotXemChanging(System.Nullable<int> value);
    partial void OnLuotXemChanged();
    #endregion
		
		public PHIM()
		{
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._CHITIETLOAIs = new EntitySet<CHITIETLOAI>(new Action<CHITIETLOAI>(this.attach_CHITIETLOAIs), new Action<CHITIETLOAI>(this.detach_CHITIETLOAIs));
			this._DANHGIAs = new EntitySet<DANHGIA>(new Action<DANHGIA>(this.attach_DANHGIAs), new Action<DANHGIA>(this.detach_DANHGIAs));
			this._PHIM_DVs = new EntitySet<PHIM_DV>(new Action<PHIM_DV>(this.attach_PHIM_DVs), new Action<PHIM_DV>(this.detach_PHIM_DVs));
			this._NAMPHATHANH = default(EntityRef<NAMPHATHANH>);
			this._QUOCGIA = default(EntityRef<QUOCGIA>);
			this._TRANGTHAI = default(EntityRef<TRANGTHAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHIM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PHIM
		{
			get
			{
				return this._ID_PHIM;
			}
			set
			{
				if ((this._ID_PHIM != value))
				{
					this.OnID_PHIMChanging(value);
					this.SendPropertyChanging();
					this._ID_PHIM = value;
					this.SendPropertyChanged("ID_PHIM");
					this.OnID_PHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_PHIM", DbType="NVarChar(50)")]
		public string TEN_PHIM
		{
			get
			{
				return this._TEN_PHIM;
			}
			set
			{
				if ((this._TEN_PHIM != value))
				{
					this.OnTEN_PHIMChanging(value);
					this.SendPropertyChanging();
					this._TEN_PHIM = value;
					this.SendPropertyChanged("TEN_PHIM");
					this.OnTEN_PHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMAGE_PHIM", DbType="VarChar(100)")]
		public string IMAGE_PHIM
		{
			get
			{
				return this._IMAGE_PHIM;
			}
			set
			{
				if ((this._IMAGE_PHIM != value))
				{
					this.OnIMAGE_PHIMChanging(value);
					this.SendPropertyChanging();
					this._IMAGE_PHIM = value;
					this.SendPropertyChanged("IMAGE_PHIM");
					this.OnIMAGE_PHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LINK_PHIM", DbType="NVarChar(100)")]
		public string LINK_PHIM
		{
			get
			{
				return this._LINK_PHIM;
			}
			set
			{
				if ((this._LINK_PHIM != value))
				{
					this.OnLINK_PHIMChanging(value);
					this.SendPropertyChanging();
					this._LINK_PHIM = value;
					this.SendPropertyChanged("LINK_PHIM");
					this.OnLINK_PHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(MAX)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TRANGTHAI", DbType="Int")]
		public System.Nullable<int> ID_TRANGTHAI
		{
			get
			{
				return this._ID_TRANGTHAI;
			}
			set
			{
				if ((this._ID_TRANGTHAI != value))
				{
					if (this._TRANGTHAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._ID_TRANGTHAI = value;
					this.SendPropertyChanged("ID_TRANGTHAI");
					this.OnID_TRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_QG", DbType="Int")]
		public System.Nullable<int> ID_QG
		{
			get
			{
				return this._ID_QG;
			}
			set
			{
				if ((this._ID_QG != value))
				{
					if (this._QUOCGIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_QGChanging(value);
					this.SendPropertyChanging();
					this._ID_QG = value;
					this.SendPropertyChanged("ID_QG");
					this.OnID_QGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NAM", DbType="Int")]
		public System.Nullable<int> ID_NAM
		{
			get
			{
				return this._ID_NAM;
			}
			set
			{
				if ((this._ID_NAM != value))
				{
					if (this._NAMPHATHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NAMChanging(value);
					this.SendPropertyChanging();
					this._ID_NAM = value;
					this.SendPropertyChanged("ID_NAM");
					this.OnID_NAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuotXem", DbType="Int")]
		public System.Nullable<int> LuotXem
		{
			get
			{
				return this._LuotXem;
			}
			set
			{
				if ((this._LuotXem != value))
				{
					this.OnLuotXemChanging(value);
					this.SendPropertyChanging();
					this._LuotXem = value;
					this.SendPropertyChanged("LuotXem");
					this.OnLuotXemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_BINHLUAN", Storage="_BINHLUANs", ThisKey="ID_PHIM", OtherKey="ID_PHIM")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_CHITIETLOAI", Storage="_CHITIETLOAIs", ThisKey="ID_PHIM", OtherKey="ID_PHIM")]
		public EntitySet<CHITIETLOAI> CHITIETLOAIs
		{
			get
			{
				return this._CHITIETLOAIs;
			}
			set
			{
				this._CHITIETLOAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_DANHGIA", Storage="_DANHGIAs", ThisKey="ID_PHIM", OtherKey="ID_PHIM")]
		public EntitySet<DANHGIA> DANHGIAs
		{
			get
			{
				return this._DANHGIAs;
			}
			set
			{
				this._DANHGIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_PHIM_DV", Storage="_PHIM_DVs", ThisKey="ID_PHIM", OtherKey="ID_PHIM")]
		public EntitySet<PHIM_DV> PHIM_DVs
		{
			get
			{
				return this._PHIM_DVs;
			}
			set
			{
				this._PHIM_DVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMPHATHANH_PHIM", Storage="_NAMPHATHANH", ThisKey="ID_NAM", OtherKey="ID_NAM", IsForeignKey=true)]
		public NAMPHATHANH NAMPHATHANH
		{
			get
			{
				return this._NAMPHATHANH.Entity;
			}
			set
			{
				NAMPHATHANH previousValue = this._NAMPHATHANH.Entity;
				if (((previousValue != value) 
							|| (this._NAMPHATHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAMPHATHANH.Entity = null;
						previousValue.PHIMs.Remove(this);
					}
					this._NAMPHATHANH.Entity = value;
					if ((value != null))
					{
						value.PHIMs.Add(this);
						this._ID_NAM = value.ID_NAM;
					}
					else
					{
						this._ID_NAM = default(Nullable<int>);
					}
					this.SendPropertyChanged("NAMPHATHANH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUOCGIA_PHIM", Storage="_QUOCGIA", ThisKey="ID_QG", OtherKey="ID_QG", IsForeignKey=true)]
		public QUOCGIA QUOCGIA
		{
			get
			{
				return this._QUOCGIA.Entity;
			}
			set
			{
				QUOCGIA previousValue = this._QUOCGIA.Entity;
				if (((previousValue != value) 
							|| (this._QUOCGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUOCGIA.Entity = null;
						previousValue.PHIMs.Remove(this);
					}
					this._QUOCGIA.Entity = value;
					if ((value != null))
					{
						value.PHIMs.Add(this);
						this._ID_QG = value.ID_QG;
					}
					else
					{
						this._ID_QG = default(Nullable<int>);
					}
					this.SendPropertyChanged("QUOCGIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANGTHAI_PHIM", Storage="_TRANGTHAI", ThisKey="ID_TRANGTHAI", OtherKey="ID_TRANGTHAI", IsForeignKey=true)]
		public TRANGTHAI TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI.Entity;
			}
			set
			{
				TRANGTHAI previousValue = this._TRANGTHAI.Entity;
				if (((previousValue != value) 
							|| (this._TRANGTHAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRANGTHAI.Entity = null;
						previousValue.PHIMs.Remove(this);
					}
					this._TRANGTHAI.Entity = value;
					if ((value != null))
					{
						value.PHIMs.Add(this);
						this._ID_TRANGTHAI = value.ID_TRANGTHAI;
					}
					else
					{
						this._ID_TRANGTHAI = default(Nullable<int>);
					}
					this.SendPropertyChanged("TRANGTHAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = null;
		}
		
		private void attach_CHITIETLOAIs(CHITIETLOAI entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = this;
		}
		
		private void detach_CHITIETLOAIs(CHITIETLOAI entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = null;
		}
		
		private void attach_DANHGIAs(DANHGIA entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = this;
		}
		
		private void detach_DANHGIAs(DANHGIA entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = null;
		}
		
		private void attach_PHIM_DVs(PHIM_DV entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = this;
		}
		
		private void detach_PHIM_DVs(PHIM_DV entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIMSAPCHIEU")]
	public partial class PHIMSAPCHIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PHIMSP;
		
		private string _TEN_PHIMSP;
		
		private string _IMAGE_PHIMSP;
		
		private string _LINK_PHIMSP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PHIMSPChanging(int value);
    partial void OnID_PHIMSPChanged();
    partial void OnTEN_PHIMSPChanging(string value);
    partial void OnTEN_PHIMSPChanged();
    partial void OnIMAGE_PHIMSPChanging(string value);
    partial void OnIMAGE_PHIMSPChanged();
    partial void OnLINK_PHIMSPChanging(string value);
    partial void OnLINK_PHIMSPChanged();
    #endregion
		
		public PHIMSAPCHIEU()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHIMSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PHIMSP
		{
			get
			{
				return this._ID_PHIMSP;
			}
			set
			{
				if ((this._ID_PHIMSP != value))
				{
					this.OnID_PHIMSPChanging(value);
					this.SendPropertyChanging();
					this._ID_PHIMSP = value;
					this.SendPropertyChanged("ID_PHIMSP");
					this.OnID_PHIMSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_PHIMSP", DbType="NVarChar(50)")]
		public string TEN_PHIMSP
		{
			get
			{
				return this._TEN_PHIMSP;
			}
			set
			{
				if ((this._TEN_PHIMSP != value))
				{
					this.OnTEN_PHIMSPChanging(value);
					this.SendPropertyChanging();
					this._TEN_PHIMSP = value;
					this.SendPropertyChanged("TEN_PHIMSP");
					this.OnTEN_PHIMSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMAGE_PHIMSP", DbType="VarChar(100)")]
		public string IMAGE_PHIMSP
		{
			get
			{
				return this._IMAGE_PHIMSP;
			}
			set
			{
				if ((this._IMAGE_PHIMSP != value))
				{
					this.OnIMAGE_PHIMSPChanging(value);
					this.SendPropertyChanging();
					this._IMAGE_PHIMSP = value;
					this.SendPropertyChanged("IMAGE_PHIMSP");
					this.OnIMAGE_PHIMSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LINK_PHIMSP", DbType="NVarChar(100)")]
		public string LINK_PHIMSP
		{
			get
			{
				return this._LINK_PHIMSP;
			}
			set
			{
				if ((this._LINK_PHIMSP != value))
				{
					this.OnLINK_PHIMSPChanging(value);
					this.SendPropertyChanging();
					this._LINK_PHIMSP = value;
					this.SendPropertyChanged("LINK_PHIMSP");
					this.OnLINK_PHIMSPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIM_DV")]
	public partial class PHIM_DV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PHIM;
		
		private int _ID_DV;
		
		private EntityRef<DIENVIEN> _DIENVIEN;
		
		private EntityRef<PHIM> _PHIM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PHIMChanging(int value);
    partial void OnID_PHIMChanged();
    partial void OnID_DVChanging(int value);
    partial void OnID_DVChanged();
    #endregion
		
		public PHIM_DV()
		{
			this._DIENVIEN = default(EntityRef<DIENVIEN>);
			this._PHIM = default(EntityRef<PHIM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHIM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PHIM
		{
			get
			{
				return this._ID_PHIM;
			}
			set
			{
				if ((this._ID_PHIM != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PHIMChanging(value);
					this.SendPropertyChanging();
					this._ID_PHIM = value;
					this.SendPropertyChanged("ID_PHIM");
					this.OnID_PHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_DV
		{
			get
			{
				return this._ID_DV;
			}
			set
			{
				if ((this._ID_DV != value))
				{
					if (this._DIENVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DVChanging(value);
					this.SendPropertyChanging();
					this._ID_DV = value;
					this.SendPropertyChanged("ID_DV");
					this.OnID_DVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIENVIEN_PHIM_DV", Storage="_DIENVIEN", ThisKey="ID_DV", OtherKey="ID_DV", IsForeignKey=true)]
		public DIENVIEN DIENVIEN
		{
			get
			{
				return this._DIENVIEN.Entity;
			}
			set
			{
				DIENVIEN previousValue = this._DIENVIEN.Entity;
				if (((previousValue != value) 
							|| (this._DIENVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIENVIEN.Entity = null;
						previousValue.PHIM_DVs.Remove(this);
					}
					this._DIENVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIM_DVs.Add(this);
						this._ID_DV = value.ID_DV;
					}
					else
					{
						this._ID_DV = default(int);
					}
					this.SendPropertyChanged("DIENVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_PHIM_DV", Storage="_PHIM", ThisKey="ID_PHIM", OtherKey="ID_PHIM", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.PHIM_DVs.Remove(this);
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.PHIM_DVs.Add(this);
						this._ID_PHIM = value.ID_PHIM;
					}
					else
					{
						this._ID_PHIM = default(int);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUOCGIA")]
	public partial class QUOCGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_QG;
		
		private string _TEN_QG;
		
		private EntitySet<PHIM> _PHIMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_QGChanging(int value);
    partial void OnID_QGChanged();
    partial void OnTEN_QGChanging(string value);
    partial void OnTEN_QGChanged();
    #endregion
		
		public QUOCGIA()
		{
			this._PHIMs = new EntitySet<PHIM>(new Action<PHIM>(this.attach_PHIMs), new Action<PHIM>(this.detach_PHIMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_QG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_QG
		{
			get
			{
				return this._ID_QG;
			}
			set
			{
				if ((this._ID_QG != value))
				{
					this.OnID_QGChanging(value);
					this.SendPropertyChanging();
					this._ID_QG = value;
					this.SendPropertyChanged("ID_QG");
					this.OnID_QGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_QG", DbType="NVarChar(30)")]
		public string TEN_QG
		{
			get
			{
				return this._TEN_QG;
			}
			set
			{
				if ((this._TEN_QG != value))
				{
					this.OnTEN_QGChanging(value);
					this.SendPropertyChanging();
					this._TEN_QG = value;
					this.SendPropertyChanged("TEN_QG");
					this.OnTEN_QGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUOCGIA_PHIM", Storage="_PHIMs", ThisKey="ID_QG", OtherKey="ID_QG")]
		public EntitySet<PHIM> PHIMs
		{
			get
			{
				return this._PHIMs;
			}
			set
			{
				this._PHIMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.QUOCGIA = this;
		}
		
		private void detach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.QUOCGIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THANHVIEN")]
	public partial class THANHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TV;
		
		private string _HOTEN;
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
		private string _EMAIL;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<DANHGIA> _DANHGIAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TVChanging(int value);
    partial void OnID_TVChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public THANHVIEN()
		{
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._DANHGIAs = new EntitySet<DANHGIA>(new Action<DANHGIA>(this.attach_DANHGIAs), new Action<DANHGIA>(this.detach_DANHGIAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TV
		{
			get
			{
				return this._ID_TV;
			}
			set
			{
				if ((this._ID_TV != value))
				{
					this.OnID_TVChanging(value);
					this.SendPropertyChanging();
					this._ID_TV = value;
					this.SendPropertyChanged("ID_TV");
					this.OnID_TVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="VarChar(50)")]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THANHVIEN_BINHLUAN", Storage="_BINHLUANs", ThisKey="ID_TV", OtherKey="ID_TV")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THANHVIEN_DANHGIA", Storage="_DANHGIAs", ThisKey="ID_TV", OtherKey="ID_TV")]
		public EntitySet<DANHGIA> DANHGIAs
		{
			get
			{
				return this._DANHGIAs;
			}
			set
			{
				this._DANHGIAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.THANHVIEN = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.THANHVIEN = null;
		}
		
		private void attach_DANHGIAs(DANHGIA entity)
		{
			this.SendPropertyChanging();
			entity.THANHVIEN = this;
		}
		
		private void detach_DANHGIAs(DANHGIA entity)
		{
			this.SendPropertyChanging();
			entity.THANHVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRANGTHAI")]
	public partial class TRANGTHAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TRANGTHAI;
		
		private string _TEN_TRANGTHAI;
		
		private EntitySet<PHIM> _PHIMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TRANGTHAIChanging(int value);
    partial void OnID_TRANGTHAIChanged();
    partial void OnTEN_TRANGTHAIChanging(string value);
    partial void OnTEN_TRANGTHAIChanged();
    #endregion
		
		public TRANGTHAI()
		{
			this._PHIMs = new EntitySet<PHIM>(new Action<PHIM>(this.attach_PHIMs), new Action<PHIM>(this.detach_PHIMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TRANGTHAI", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TRANGTHAI
		{
			get
			{
				return this._ID_TRANGTHAI;
			}
			set
			{
				if ((this._ID_TRANGTHAI != value))
				{
					this.OnID_TRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._ID_TRANGTHAI = value;
					this.SendPropertyChanged("ID_TRANGTHAI");
					this.OnID_TRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_TRANGTHAI", DbType="NVarChar(30)")]
		public string TEN_TRANGTHAI
		{
			get
			{
				return this._TEN_TRANGTHAI;
			}
			set
			{
				if ((this._TEN_TRANGTHAI != value))
				{
					this.OnTEN_TRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TEN_TRANGTHAI = value;
					this.SendPropertyChanged("TEN_TRANGTHAI");
					this.OnTEN_TRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANGTHAI_PHIM", Storage="_PHIMs", ThisKey="ID_TRANGTHAI", OtherKey="ID_TRANGTHAI")]
		public EntitySet<PHIM> PHIMs
		{
			get
			{
				return this._PHIMs;
			}
			set
			{
				this._PHIMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.TRANGTHAI = this;
		}
		
		private void detach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.TRANGTHAI = null;
		}
	}
}
#pragma warning restore 1591
